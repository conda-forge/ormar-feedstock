{% set name = "ormar" %}
{% set version = "0.20.2" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/ormar-{{ version }}.tar.gz
  sha256: 263bf00f63cbe824882fbbb828764aa0539204ae6d259e9e1b51c2d2a6a1c83e

build:
  number: 0
  noarch: python
  script:
    - {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - pip
    - poetry-core >=1.0.0
    - python {{ python_min }}
  run:
    - python >={{ python_min }}
    - databases >=0.7.0,<0.8.0
    - pydantic >=2.5.3,<2.9.0
    - sqlalchemy >=1.4.42,<2.0.0
    - setuptools >=75.1.0,<76.0.0

test:
  imports:
    - ormar
  commands:
    - pip check
  requires:
    - pip
    - python {{ python_min }}

about:
  home: https://github.com/collerek/ormar
  summary: A simple async ORM with fastapi in mind and pydantic validation.
  license: MIT
  license_file: LICENSE.md
  doc_url: https://collerek.github.io/ormar/
  description: |
    The ormar package is an async mini ORM for Python, with support for
     Postgres, MySQL, and SQLite. The main benefit of using ormar includes the
     ability to get an async ORM that can be used with async frameworks
     (fastapi, starlette etc.). Using ormar would simplly workflow with just one
     model to maintainâ€”you don't have to maintain pydantic and other orm model
     (sqlalchemy, peewee, gino etc.)

extra:
  recipe-maintainers:
    - thewchan
